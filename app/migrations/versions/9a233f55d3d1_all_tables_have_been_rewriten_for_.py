"""All tables have been rewriten for SQLAlchemy 2.x

Revision ID: 9a233f55d3d1
Revises: 967d5d223cd9
Create Date: 2025-09-30 16:45:59.121956

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a233f55d3d1'
down_revision: Union[str, Sequence[str], None] = '967d5d223cd9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('activity_types', sa.Column('organisation_id', sa.BigInteger(), nullable=True))
    op.alter_column('activity_types', 'visible',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint(op.f('activity_types_organisation_fkey'), 'activity_types', type_='foreignkey')
    op.create_foreign_key(None, 'activity_types', 'organisations', ['organisation_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_column('activity_types', 'organisation')
    op.add_column('divisions', sa.Column('organisation_id', sa.BigInteger(), nullable=False))
    op.drop_constraint(op.f('divisions_organisation_fkey'), 'divisions', type_='foreignkey')
    op.create_foreign_key(None, 'divisions', 'organisations', ['organisation_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_column('divisions', 'organisation')
    op.add_column('projects', sa.Column('organisation_id', sa.BigInteger(), nullable=True))
    op.drop_constraint(op.f('projects_organisation_fkey'), 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'organisations', ['organisation_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_column('projects', 'organisation')
    op.add_column('tasks', sa.Column('user_id', sa.BigInteger(), nullable=False))
    op.add_column('tasks', sa.Column('project_id', sa.BigInteger(), nullable=False))
    op.add_column('tasks', sa.Column('type_of_activity_id', sa.BigInteger(), nullable=False))
    op.drop_constraint(op.f('tasks_type_of_activity_fkey'), 'tasks', type_='foreignkey')
    op.drop_constraint(op.f('tasks_user_fkey'), 'tasks', type_='foreignkey')
    op.drop_constraint(op.f('tasks_project_fkey'), 'tasks', type_='foreignkey')
    op.create_foreign_key(None, 'tasks', 'projects', ['project_id'], ['id'], onupdate='NO ACTION', ondelete='NO ACTION')
    op.create_foreign_key(None, 'tasks', 'users', ['user_id'], ['id'], onupdate='NO ACTION', ondelete='NO ACTION')
    op.create_foreign_key(None, 'tasks', 'activity_types', ['type_of_activity_id'], ['id'], onupdate='NO ACTION', ondelete='NO ACTION')
    op.drop_column('tasks', 'user')
    op.drop_column('tasks', 'project')
    op.drop_column('tasks', 'type_of_activity')
    op.add_column('users', sa.Column('division_id', sa.BigInteger(), nullable=False))
    op.drop_constraint(op.f('users_division_fkey'), 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'divisions', ['division_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_column('users', 'division')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('division', sa.BIGINT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key(op.f('users_division_fkey'), 'users', 'divisions', ['division'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_column('users', 'division_id')
    op.add_column('tasks', sa.Column('type_of_activity', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('project', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('user', sa.BIGINT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.create_foreign_key(op.f('tasks_project_fkey'), 'tasks', 'projects', ['project'], ['id'])
    op.create_foreign_key(op.f('tasks_user_fkey'), 'tasks', 'users', ['user'], ['id'])
    op.create_foreign_key(op.f('tasks_type_of_activity_fkey'), 'tasks', 'activity_types', ['type_of_activity'], ['id'])
    op.drop_column('tasks', 'type_of_activity_id')
    op.drop_column('tasks', 'project_id')
    op.drop_column('tasks', 'user_id')
    op.add_column('projects', sa.Column('organisation', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key(op.f('projects_organisation_fkey'), 'projects', 'organisations', ['organisation'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_column('projects', 'organisation_id')
    op.add_column('divisions', sa.Column('organisation', sa.BIGINT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'divisions', type_='foreignkey')
    op.create_foreign_key(op.f('divisions_organisation_fkey'), 'divisions', 'organisations', ['organisation'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_column('divisions', 'organisation_id')
    op.add_column('activity_types', sa.Column('organisation', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'activity_types', type_='foreignkey')
    op.create_foreign_key(op.f('activity_types_organisation_fkey'), 'activity_types', 'organisations', ['organisation'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.alter_column('activity_types', 'visible',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('activity_types', 'organisation_id')
    # ### end Alembic commands ###
